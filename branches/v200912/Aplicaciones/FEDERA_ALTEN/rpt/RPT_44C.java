/*
 * Generated by JasperReports - 7/07/08 12:38
 */
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.fill.*;

import java.util.*;
import java.math.*;
import java.text.*;
import java.io.*;
import java.net.*;

import java.util.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.*;


/**
 *
 */
public class RPT_44C extends JRCalculator
{


    /**
     *
     */
    private JRFillParameter parameter_REPORT_RESOURCE_BUNDLE = null;
    private JRFillParameter parameter_P1 = null;
    private JRFillParameter parameter_REPORT_CONNECTION = null;
    private JRFillParameter parameter_REPORT_PARAMETERS_MAP = null;
    private JRFillParameter parameter_IS_IGNORE_PAGINATION = null;
    private JRFillParameter parameter_P2 = null;
    private JRFillParameter parameter_REPORT_VIRTUALIZER = null;
    private JRFillParameter parameter_P3 = null;
    private JRFillParameter parameter_REPORT_LOCALE = null;
    private JRFillParameter parameter_REPORT_DATA_SOURCE = null;
    private JRFillParameter parameter_REPORT_SCRIPTLET = null;
    private JRFillParameter parameter_REPORT_MAX_COUNT = null;

    private JRFillField field_DISPONIBLE = null;
    private JRFillField field_GASTADO = null;
    private JRFillField field_TOTAL32AYUDAS = null;
    private JRFillField field_APROBADO = null;
    private JRFillField field_Nº32COMITÉ = null;
    private JRFillField field_AREA = null;
    private JRFillField field_PRESUPUESTADO = null;
    private JRFillField field_DENEGADOS = null;
    private JRFillField field_CONCEDIDOS = null;
    private JRFillField field_IMPORTE32ASIGNADO = null;

    private JRFillVariable variable_PAGE_NUMBER = null;
    private JRFillVariable variable_COLUMN_NUMBER = null;
    private JRFillVariable variable_REPORT_COUNT = null;
    private JRFillVariable variable_PAGE_COUNT = null;
    private JRFillVariable variable_COLUMN_COUNT = null;


    /**
     *
     */
    public void customizedInit(
        Map pm,
        Map fm,
        Map vm
        )
    {
        initParams(pm);
        initFields(fm);
        initVars(vm);
    }


    /**
     *
     */
    private void initParams(Map pm)
    {
        parameter_REPORT_RESOURCE_BUNDLE = (JRFillParameter)pm.get("REPORT_RESOURCE_BUNDLE");
        parameter_P1 = (JRFillParameter)pm.get("P1");
        parameter_REPORT_CONNECTION = (JRFillParameter)pm.get("REPORT_CONNECTION");
        parameter_REPORT_PARAMETERS_MAP = (JRFillParameter)pm.get("REPORT_PARAMETERS_MAP");
        parameter_IS_IGNORE_PAGINATION = (JRFillParameter)pm.get("IS_IGNORE_PAGINATION");
        parameter_P2 = (JRFillParameter)pm.get("P2");
        parameter_REPORT_VIRTUALIZER = (JRFillParameter)pm.get("REPORT_VIRTUALIZER");
        parameter_P3 = (JRFillParameter)pm.get("P3");
        parameter_REPORT_LOCALE = (JRFillParameter)pm.get("REPORT_LOCALE");
        parameter_REPORT_DATA_SOURCE = (JRFillParameter)pm.get("REPORT_DATA_SOURCE");
        parameter_REPORT_SCRIPTLET = (JRFillParameter)pm.get("REPORT_SCRIPTLET");
        parameter_REPORT_MAX_COUNT = (JRFillParameter)pm.get("REPORT_MAX_COUNT");
    }


    /**
     *
     */
    private void initFields(Map fm)
    {
        field_DISPONIBLE = (JRFillField)fm.get("DISPONIBLE");
        field_GASTADO = (JRFillField)fm.get("GASTADO");
        field_TOTAL32AYUDAS = (JRFillField)fm.get("TOTAL AYUDAS");
        field_APROBADO = (JRFillField)fm.get("APROBADO");
        field_Nº32COMITÉ = (JRFillField)fm.get("Nº COMITÉ");
        field_AREA = (JRFillField)fm.get("AREA");
        field_PRESUPUESTADO = (JRFillField)fm.get("PRESUPUESTADO");
        field_DENEGADOS = (JRFillField)fm.get("DENEGADOS");
        field_CONCEDIDOS = (JRFillField)fm.get("CONCEDIDOS");
        field_IMPORTE32ASIGNADO = (JRFillField)fm.get("IMPORTE ASIGNADO");
    }


    /**
     *
     */
    private void initVars(Map vm)
    {
        variable_PAGE_NUMBER = (JRFillVariable)vm.get("PAGE_NUMBER");
        variable_COLUMN_NUMBER = (JRFillVariable)vm.get("COLUMN_NUMBER");
        variable_REPORT_COUNT = (JRFillVariable)vm.get("REPORT_COUNT");
        variable_PAGE_COUNT = (JRFillVariable)vm.get("PAGE_COUNT");
        variable_COLUMN_COUNT = (JRFillVariable)vm.get("COLUMN_COUNT");
    }


    /**
     *
     */
    public Object evaluate(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 175 : // 175
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_DENEGADOS.getValue()));
                break;
            }
            case 163 : // 163
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 172 : // 172
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_IMPORTE32ASIGNADO.getValue()));
                break;
            }
            case 160 : // 160
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 173 : // 173
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_TOTAL32AYUDAS.getValue()));
                break;
            }
            case 159 : // 159
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 176 : // 176
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getValue()));
                break;
            }
            case 177 : // 177
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getValue()));
                break;
            }
            case 166 : // 166
            {
                value = (java.lang.Integer)(new Integer("2005"));
                break;
            }
            case 180 : // 180
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_DISPONIBLE.getValue()));
                break;
            }
            case 168 : // 168
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getValue()).toUpperCase()!=null));
                break;
            }
            case 174 : // 174
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_CONCEDIDOS.getValue()));
                break;
            }
            case 164 : // 164
            {
                value = (java.lang.String)("Admin");
                break;
            }
            case 167 : // 167
            {
                value = (java.lang.String)(java.util.Calendar.getInstance().get(java.util.Calendar.DATE)
+ "/" +
((java.util.Calendar.getInstance().get(java.util.Calendar.MONTH))+1)
+ "/" +
java.util.Calendar.getInstance().get(java.util.Calendar.YEAR));
                break;
            }
            case 169 : // 169
            {
                value = (java.lang.String)("RESUMEN DE APROBACIONES DEL EJERCICIO "+((java.lang.Integer)parameter_P3.getValue())+" POR SESIÓN DE COMITÉ PARA EL ÁREA "+((java.lang.String)field_AREA.getValue()));
                break;
            }
            case 171 : // 171
            {
                value = (java.lang.String)(((java.lang.String)field_Nº32COMITÉ.getValue()));
                break;
            }
            case 165 : // 165
            {
                value = (java.lang.String)("LC");
                break;
            }
            case 179 : // 179
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_APROBADO.getValue()));
                break;
            }
            case 178 : // 178
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_PRESUPUESTADO.getValue()));
                break;
            }
            case 170 : // 170
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getValue()).toUpperCase()!=null));
                break;
            }
            case 161 : // 161
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 157 : // 157
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 181 : // 181
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_GASTADO.getValue()));
                break;
            }
            case 158 : // 158
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 156 : // 156
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 162 : // 162
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateOld(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 175 : // 175
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_DENEGADOS.getOldValue()));
                break;
            }
            case 163 : // 163
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 172 : // 172
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_IMPORTE32ASIGNADO.getOldValue()));
                break;
            }
            case 160 : // 160
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 173 : // 173
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_TOTAL32AYUDAS.getOldValue()));
                break;
            }
            case 159 : // 159
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 176 : // 176
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getOldValue()));
                break;
            }
            case 177 : // 177
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getOldValue()));
                break;
            }
            case 166 : // 166
            {
                value = (java.lang.Integer)(new Integer("2005"));
                break;
            }
            case 180 : // 180
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_DISPONIBLE.getOldValue()));
                break;
            }
            case 168 : // 168
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getOldValue()).toUpperCase()!=null));
                break;
            }
            case 174 : // 174
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_CONCEDIDOS.getOldValue()));
                break;
            }
            case 164 : // 164
            {
                value = (java.lang.String)("Admin");
                break;
            }
            case 167 : // 167
            {
                value = (java.lang.String)(java.util.Calendar.getInstance().get(java.util.Calendar.DATE)
+ "/" +
((java.util.Calendar.getInstance().get(java.util.Calendar.MONTH))+1)
+ "/" +
java.util.Calendar.getInstance().get(java.util.Calendar.YEAR));
                break;
            }
            case 169 : // 169
            {
                value = (java.lang.String)("RESUMEN DE APROBACIONES DEL EJERCICIO "+((java.lang.Integer)parameter_P3.getValue())+" POR SESIÓN DE COMITÉ PARA EL ÁREA "+((java.lang.String)field_AREA.getOldValue()));
                break;
            }
            case 171 : // 171
            {
                value = (java.lang.String)(((java.lang.String)field_Nº32COMITÉ.getOldValue()));
                break;
            }
            case 165 : // 165
            {
                value = (java.lang.String)("LC");
                break;
            }
            case 179 : // 179
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_APROBADO.getOldValue()));
                break;
            }
            case 178 : // 178
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_PRESUPUESTADO.getOldValue()));
                break;
            }
            case 170 : // 170
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getOldValue()).toUpperCase()!=null));
                break;
            }
            case 161 : // 161
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 157 : // 157
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 181 : // 181
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_GASTADO.getOldValue()));
                break;
            }
            case 158 : // 158
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 156 : // 156
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 162 : // 162
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateEstimated(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 175 : // 175
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_DENEGADOS.getValue()));
                break;
            }
            case 163 : // 163
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 172 : // 172
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_IMPORTE32ASIGNADO.getValue()));
                break;
            }
            case 160 : // 160
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 173 : // 173
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_TOTAL32AYUDAS.getValue()));
                break;
            }
            case 159 : // 159
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 176 : // 176
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getEstimatedValue()));
                break;
            }
            case 177 : // 177
            {
                value = (java.lang.Integer)(((java.lang.Integer)variable_PAGE_NUMBER.getEstimatedValue()));
                break;
            }
            case 166 : // 166
            {
                value = (java.lang.Integer)(new Integer("2005"));
                break;
            }
            case 180 : // 180
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_DISPONIBLE.getValue()));
                break;
            }
            case 168 : // 168
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getValue()).toUpperCase()!=null));
                break;
            }
            case 174 : // 174
            {
                value = (java.lang.Integer)(((java.lang.Integer)field_CONCEDIDOS.getValue()));
                break;
            }
            case 164 : // 164
            {
                value = (java.lang.String)("Admin");
                break;
            }
            case 167 : // 167
            {
                value = (java.lang.String)(java.util.Calendar.getInstance().get(java.util.Calendar.DATE)
+ "/" +
((java.util.Calendar.getInstance().get(java.util.Calendar.MONTH))+1)
+ "/" +
java.util.Calendar.getInstance().get(java.util.Calendar.YEAR));
                break;
            }
            case 169 : // 169
            {
                value = (java.lang.String)("RESUMEN DE APROBACIONES DEL EJERCICIO "+((java.lang.Integer)parameter_P3.getValue())+" POR SESIÓN DE COMITÉ PARA EL ÁREA "+((java.lang.String)field_AREA.getValue()));
                break;
            }
            case 171 : // 171
            {
                value = (java.lang.String)(((java.lang.String)field_Nº32COMITÉ.getValue()));
                break;
            }
            case 165 : // 165
            {
                value = (java.lang.String)("LC");
                break;
            }
            case 179 : // 179
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_APROBADO.getValue()));
                break;
            }
            case 178 : // 178
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_PRESUPUESTADO.getValue()));
                break;
            }
            case 170 : // 170
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.String)field_AREA.getValue()).toUpperCase()!=null));
                break;
            }
            case 161 : // 161
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 157 : // 157
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 181 : // 181
            {
                value = (java.math.BigDecimal)(((java.math.BigDecimal)field_GASTADO.getValue()));
                break;
            }
            case 158 : // 158
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 156 : // 156
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 162 : // 162
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


}
